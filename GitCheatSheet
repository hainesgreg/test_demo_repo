Ensure you have Git installed locally
Create SSH key and add to Github, Bitbucket etc

Git clone <URL>

When repo is successfully cloned locally 

Man git-branch
HEAD = pointer to current branch
Git clone <URL>
Git init
Git branch <NameOfNewBranch>
Git checkout <NameOfNewBranch>
Git log --oneline --decorate
Git add .
Git status
Git commit -m “comment here”
Git revert “NameOfCurrentBranch”

What is HEAD in Git? (think of HEAD as a pointer to the CURRENT branch)
HEAD is a reference to the last commit in the currently check-out branch.

You can think of the HEAD as the "current branch". When you switch branches with git checkout, the HEAD revision changes to point to the tip of the new branch.


How to check for changes (git diff, git whatchanged)
Git remote update
(to bring your remote refs up to date)
Git status -uno
(will tell you whether the branch you are tracking is ahead, behind or has diverged. If it says nothing, the local and remote are the same.)
Git show-branch master 
(will show you the commits in all of the branches whose names end in 'master' (eg master and origin/master)
Git diff
(use this command to check what has changed on the local repo since the last save\commit)
Git diff origin/master
(use this command to check if any changes have been made to the remote repo)
Git whatchanged origin/master -n 3
(can be used check what has changed)

Git remote -v
Git remote show origin
Git fetch origin - this command will update your local copy if changes have been made to the remote repo. (be sure to git merge the updated files)
Git pull
Git push -u origin <NameOfBranch>

Pull Request - to request a merge to the remote repository




